@import 'tailwindcss' source('..');

@plugin "@tailwindcss/typography";
@config "../../tailwind.config.js";

@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@import '~/lib/stylesheets/themes/light.css' layer(theme);
@import '~/lib/stylesheets/themes/dark.css' layer(base);

@import '~/lib/assets/fonts/DMMono/font-face.css' layer(theme);
@import '~/lib/assets/fonts/NotoSans/font-face.css' layer(theme);

@import '~/lib/stylesheets/c-input.css' layer(components);
@import '~/lib/stylesheets/c-button.css' layer(components);
@import '~/lib/stylesheets/c-link.css' layer(components);
@import '~/lib/stylesheets/c-label.css' layer(components);
@import '~/lib/stylesheets/c-table.css' layer(components);
@import '~/lib/stylesheets/c-tiptap.css' layer(components);
@import '~/lib/stylesheets/c-popover.css' layer(components);
@import '~/lib/stylesheets/c-badge.css' layer(components);
@import '~/lib/stylesheets/c-icon-button.css' layer(components);
@import '~/lib/stylesheets/c-select.css' layer(components);
@import '~/lib/stylesheets/c-main.css' layer(components);
@import '~/lib/stylesheets/c-dialog.css' layer(components);

@theme {
    --font-display: 'Noto Sans', var(--font-sans);
    --font-body: 'Noto Sans', InterVariable, var(--font-sans);
    --font-mono: 'DM Mono', InterVariable, var(--font-sans);
    --text-sm: 0.9028rem;
    --text-p: 1rem;
    --text-h6: 1.125rem;
    --text-h5: 1.266rem;
    --text-h4: 1.424rem;
    --text-h3: 1.602rem;
    --text-h2: 1.802rem;
    --text-h1: 2.488rem;
    --radius-full: calc(infinity * 1px);

    --cubic-out: cubic-bezier(0.33, 1, 0.68, 1);
    --cubic-in: cubic-bezier(0.32, 0, 0.67, 0);
    --cubic-in-out: cubic-bezier(0.65, 0, 0.35, 1);
}

@theme inline {
    --default-transition-timing-function: var(--cubic-out);
    --text-title: var(--text-h5);
    --container-paragraph-sm: var(--container-sm);
    --container-paragraph-lg: var(--container-2xl);
    --size-avatar-lg: calc(var(--spacing) * 12);
    --size-avatar-md: calc(var(--spacing) * 10);
    --size-avatar-sm: calc(var(--spacing) * 6);
}

@layer base {
    :root {
        color-scheme: light dark;
        font-size: 15px;
        font-weight: 400;
        line-height: 1.5;
        font-synthesis: none;
        text-rendering: optimizeLegibility;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        -webkit-text-size-adjust: 100%;
        /* fix for Chrome */
        font-feature-settings:
            'liga' 1,
            'calt' 1;

        background-color: var(--color-base-1);
        color: var(--color-base-fg-2);
        font-family: var(--font-body);
        transition:
            color 100ms var(--cubic-out),
            background-color 100ms var(--cubic-out);
    }

    .prose {
        --typo-scale: 1.0625;
        --font-size-h6: calc(var(--text-p) * var(--typo-scale));
        --font-size-h5: calc(var(--text-h6) * var(--typo-scale));
        --font-size-h4: calc(var(--text-h5) * var(--typo-scale));
        --font-size-h3: calc(var(--text-h4) * var(--typo-scale));
        --font-size-h2: calc(var(--text-h3) * var(--typo-scale));
        --font-size-h1: calc(var(--text-h2) * var(--typo-scale));
        --font-size-title: var(--text-h5);
    }

    @supports (font-variation-settings: normal) {
        :root {
            font-optical-sizing: auto;
        }
    }

    body {
        font-size: var(--text-p);
        overflow: hidden;
    }

    h6 {
        font-size: var(--text-h6);
    }

    h5 {
        font-size: var(--text-h5);
    }

    h4 {
        font-size: var(--text-h4);
    }

    h3 {
        font-size: var(--text-h3);
    }

    h2 {
        font-size: var(--text-h2);
    }

    h1 {
        font-size: var(--text-h1);
    }

    small {
        font-size: var(--text-sm);
    }

    .transition-enforcement {
        display: grid;
    }

    .transition-enforcement > * {
        grid-column: 1/2;
        grid-row: 1/2;
    }

    hr {
        border-color: var(--color-base-border-3);
    }

    .custom-scrollbar {
        --_border: var(--color-base-3);
        --_bg: color-mix(in oklch, var(--color-base-fg-2) 30%, var(--color-base-1));
        &::-webkit-scrollbar-thumb {
            border: --spacing(0.5) solid var(--_border);
            background-color: var(--_bg);
        }
    }

    .scrollbar-3 {
        &::-webkit-scrollbar-thumb {
            border: --spacing(0.5) solid var(--color-base-3);
        }
    }

    ::-webkit-scrollbar {
        width: --spacing(2);
        height: --spacing(2);
    }

    ::-webkit-scrollbar-thumb {
        border: --spacing(0.5) solid var(--color-base-1);
        border-radius: var(--radius-full);
        background: color-mix(in oklch, var(--color-base-fg-2) 30%, var(--color-base-1));
    }
}

@layer utilities {
    .prose {
        @variant dark {
            --tw-prose-pre-bg: var(--color-base-5);
        }
    }
}

[data-sonner-toaster] {
    font-family: var(--font-body);
}

[popover] {
    color: var(--color-base-fg-2);
}

:where(h1, h2, h3, h4, h5, h6) {
    color: var(--color-base-fg-1);
    font-family: var(--font-display);
    font-weight: 700;
}

.mesh-gradient {
    --_gradient-blend-mode: normal;
    --_gradient:
        radial-gradient(
            at 81% 11%,
            color-mix(in oklch, var(--color-primary-1) 100%, transparent) 0px,
            transparent 50%
        ),
        radial-gradient(
            at 45% 22%,
            color-mix(in oklch, var(--color-primary-1) 60%, transparent) 0px,
            transparent 50%
        ),
        radial-gradient(
            at 28% 14%,
            color-mix(in oklch, var(--color-primary-1) 40%, transparent) 0px,
            transparent 50%
        ),
        radial-gradient(
            at 52% 18%,
            color-mix(in oklch, var(--color-primary-1) 20%, transparent) 0px,
            transparent 50%
        ),
        radial-gradient(
            at 89% 47%,
            color-mix(in oklch, var(--color-primary-1) 0%, transparent) 0px,
            transparent 50%
        );

    background: var(--_gradient) var(--color-base-1);
    mix-blend-mode: var(--_gradient-blend-mode);
}
.noise {
    --_noise-texture: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 300 300'><defs><filter id='n' x='0' y='0' width='100%' height='100%' color-interpolation-filters='sRGB'><feTurbulence type='fractalNoise' baseFrequency='0.3' numOctaves='3' stitchTiles='stitch' result='t'/><feColorMatrix type='saturate' values='0' in='t' result='g'/><feComponentTransfer in='g' result='a'><feFuncA type='linear' slope='0.5'/></feComponentTransfer></filter></defs><rect width='100%' height='100%' filter='url(%23n)'/></svg>");
    --_noise-size: 8vmin;

    background-image: var(--_noise-texture);
    background-size: var(--_noise-size);
    background-position: center;
    background-repeat: repeat;
}

.frosted-backdrop {
    --_gradient-blur: 200px;

    backdrop-filter: blur(var(--_gradient-blur)) contrast(100%) brightness(100%);
    -webkit-backdrop-filter: blur(var(--_gradient-blur)) contrast(100%) brightness(100%);
}
